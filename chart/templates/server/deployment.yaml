{{- define "server.deployment.volumeMounts" }}
- name: server-files
  mountPath: /home/sdtdserver/serverfiles
- name: server-scripts
  mountPath: /tmp/sdtdserver-scripts
- name: server-configs
  mountPath: /tmp/sdtdserver-configs
- name: server-saves
  mountPath: /home/sdtdserver/.local/share/7DaysToDie
- name: server-logs
  mountPath: /home/sdtdserver/log
- name: server-backups
  mountPath: /home/sdtdserver/lgsm/backup
{{- end }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "server.name" . }}
  namespace: "{{ .Release.Namespace }}"
  labels: {{- include "server.labels" . | nindent 4 }}
  annotations:
    {{- if .Values.commonAnnotations }}
    {{ toYaml .Values.commonAnnotations | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.server.replicaCount }}
  selector:
    matchLabels: {{ include "server.labels" . | nindent 6 }}
  template:
    metadata:
      labels: {{ include "server.labels" . | nindent 8 }}
      annotations:
        checksum/cm-environment: "{{ include (print $.Template.BasePath "/server/cm-environment.yaml") . | sha256sum }}"
        checksum/cm-config: "{{ include (print $.Template.BasePath "/server/cm-config.yaml") . | sha256sum }}"
        checksum/cm-scripts: "{{ include (print $.Template.BasePath "/server/cm-scripts.yaml") . | sha256sum }}"
        {{- if .Values.server.podAnnotations }}
        {{ toYaml .Values.server.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.commonAnnotations }}
        {{ toYaml .Values.commonAnnotations | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: "{{ default (include "server.name" . ) .Values.serviceAccount.server.name }}"
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.server.podSecurityContext | nindent 8 }}
      {{- with .Values.server.nodeSelector }}
      nodeSelector:
         {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.affinity }}
      affinity:
         {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.server.tolerations }}
      tolerations:
         {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if eq .Values.server.networkMode "HostNetwork" }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}

      initContainers:
        - name: install-server
          securityContext: {{ toYaml .Values.server.securityContext | nindent 12 }}
          image: "{{ .Values.server.image.name }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          env:
            - name: START_MODE
              value: "0"
          volumeMounts: {{ include "server.deployment.volumeMounts" . | nindent 12 }}
          resources: {{ toYaml .Values.server.resources | nindent 12 }}
        - name: update-mods
          securityContext: {{ toYaml .Values.server.securityContext | nindent 12 }}
          image: "{{ .Values.server.image.name }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          env:
            - name: START_MODE
              value: "0"
            - name: UPDATE_MODS
              value: "YES"
          volumeMounts: {{ include "server.deployment.volumeMounts" . | nindent 12 }}
          resources: {{ toYaml .Values.server.resources | nindent 12 }}

        - name: preparation
          securityContext: {{ toYaml .Values.server.securityContext | nindent 12 }}
          image: "{{ .Values.server.image.name }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          command: ["/bin/sh", "-c", "bash /tmp/sdtdserver-scripts/server_preparation.sh"]
          volumeMounts: {{ include "server.deployment.volumeMounts" . | nindent 12 }}
          resources: {{ toYaml .Values.server.resources | nindent 12 }}

      containers:
        - name: server
          securityContext: {{ toYaml .Values.server.securityContext | nindent 12 }}
          image: "{{ .Values.server.image.name }}"
          imagePullPolicy: {{ .Values.server.image.pullPolicy }}
          #command: ["sleep", "36000"]
          envFrom:
            - configMapRef:
                name: "{{ printf "%s-env" (include "server.name" .) }}"
          ports:
            - name: game-tcp01
              containerPort: 26900
              {{- if eq .Values.server.networkMode "HostNetwork" }}
              hostPort: 26900
              {{- end }}
              protocol: TCP
            - name: game-udp01
              containerPort: 26900
              {{- if eq .Values.server.networkMode "HostNetwork" }}
              hostPort: 26900
              {{- end }}
              protocol: UDP
            - name: game-udp02
              containerPort: 26901
              {{- if eq .Values.server.networkMode "HostNetwork" }}
              hostPort: 26901
              {{- end }}
              protocol: UDP
            - name: game-udp03
              containerPort: 26902
              {{- if eq .Values.server.networkMode "HostNetwork" }}
              hostPort: 26902
              {{- end }}
              protocol: UDP
            - name: telnet-cp
              containerPort: 8081
              protocol: TCP

            {{- if and (.Values.server.ingress.webAdmin.enabled) (.Values.server.ingress.webAdmin.hostname) }}
            - name: webadmin
              containerPort: 8080
              protocol: TCP
            {{- end }}

            {{- if and (.Values.server.ingress.serverFixes.enabled) (.Values.server.ingress.serverFixes.hostname) }}
            - name: serverfixes
              containerPort: 8082
              protocol: TCP
            {{- end }}

          resources: {{ toYaml .Values.server.resources | nindent 12 }}
          volumeMounts: {{ include "server.deployment.volumeMounts" . | nindent 12 }}

      volumes:
        - name: server-scripts
          configMap:
            name: "{{ printf "%s-scripts" (include "server.name" .) }}"
        - name: server-configs
          configMap:
            name: "{{ printf "%s-config" (include "server.name" .) }}"
        {{- if not .Values.persistence.serverFiles.enabled }}
        - name: server-files
          emptyDir: { }
        {{- else if .Values.persistence.serverFiles.existingClaim }}
        - name: server-files
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.serverFiles.existingClaim }}
        {{- else }}
        - name: server-files
          persistentVolumeClaim:
            claimName: {{ printf "%s-server-files" (include "server.name" . ) }}
        {{- end }}
        {{- if not .Values.persistence.saves.enabled }}
        - name: server-saves
          emptyDir: { }
        {{- else if .Values.persistence.saves.existingClaim }}
        - name: server-saves
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.saves.existingClaim }}
        {{- else }}
        - name: server-saves
          persistentVolumeClaim:
            claimName: {{ printf "%s-saves" (include "server.name" . ) }}
        {{- end }}

        {{- if not .Values.persistence.logs.enabled }}
        - name: server-logs
          emptyDir: { }
        {{- else if .Values.persistence.logs.existingClaim }}
        - name: server-logs
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.logs.existingClaim }}
        {{- else }}
        - name: server-logs
          persistentVolumeClaim:
            claimName: {{ printf "%s-logs" (include "server.name" . ) }}
        {{- end }}

        {{- if not .Values.persistence.backups.enabled }}
        - name: server-backups
          emptyDir: { }
        {{- else if .Values.persistence.backups.existingClaim }}
        - name: server-backups
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.backups.existingClaim }}
        {{- else }}
        - name: server-backups
          persistentVolumeClaim:
            claimName: {{ printf "%s-backups" (include "server.name" . ) }}
        {{- end }}